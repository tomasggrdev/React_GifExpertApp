{"version":3,"sources":["components/AddCategory.js","helpers/GetGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","categories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","placeholder","type","value","onChange","target","onClick","className","getGif","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"gLAIaA,EAAc,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,WACrC,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOMC,EAAe,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BT,GAAa,SAAAU,GAAI,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAIlB,OACI,uBAAMO,SAAUN,EAAhB,UACI,uBACIO,YAAY,cACZC,KAAK,SACLC,MAAOX,EACPY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,UAqBnB,wBAAQG,QAASZ,EAAjB,oBACA,oBAAIa,UAAW,iBAAf,SAAkCjB,EAAW,S,8BC9B5CkB,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,0FAE2EC,UAAUH,GAFrF,sBAGKI,MAAMF,GAHX,cAGZG,EAHY,gBAIGA,EAASC,OAJZ,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVvB,kBAcVM,GAdU,4CAAH,sDCENO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKJ,UAAU,OAAf,UACI,qBAAKkB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCFHM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SACrB,ECHwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WAENvB,EAAOC,GACFuB,MAAK,SAAAC,GAGFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKvB,CAACnB,IAGIoB,EDpBgBK,CAAazB,GAA7BmB,EAAP,EAAOA,QAAQZ,EAAf,EAAeA,KAEX,OACA,sBAAKT,UAAU,YAAf,UACI,6BAAKE,IACJmB,GAAW,2CACZ,6BACKZ,EAAKE,KAAI,SAAAC,GACN,OAAQ,wBAAC,EAAD,2BACAA,GADA,IAEJgB,IAAKhB,EAAIC,eEXpBgB,EAAe,WACxB,MAAiC7C,mBAAS,CAAC,cAA3C,mBAAOD,EAAP,KAAkBD,EAAlB,KAEA,OACA,qCACI,mCACI,oBAAIkB,UAAW,oCAAf,0BACA,cAAC,EAAD,CAAalB,YAAaA,EAAaC,WAAYA,OAEvD,uBACA,6BAEQA,EAAW4B,KAAI,SAACT,GACZ,OAAS,cAAC,EAAD,CACLA,SAAUA,GACLA,Y,MCd7B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f547f6ab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { useState } from 'react'\n\nexport const AddCategory = ({setCategory,categories}) => {\n    const [inputValue,setInputValue] = useState(\"\")\n   \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (inputValue.trim().length > 2) {\n        setCategory( cats => [inputValue,...cats])\n        setInputValue(\"\")\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                placeholder=\"  search...\"\n                type=\"search\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            <button onClick={handleSubmit}>Submit</button>\n            <h2 className={\"animate__flash\"}>{categories[0]}</h2>\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategory: PropTypes.func.isRequired\n}\n\n","export const getGif = async (category) => {\n\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=4Evk6WvzDVCnAMkCh3WCxTAsCsG3y4uV&q=${encodeURI(category)}&limit=10`\n    const response = await fetch(url);\n    const {data} = await response.json();\n\n    const gifs = data.map(img => {\n        return {\n            id:img.id,\n            title:img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return (gifs);\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    \n    return (\n        <div className=\"card\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from \"../hooks/useFetchGif\";\nimport { GifGridItem } from \"./GifGridItem\";\n\n//4Evk6WvzDVCnAMkCh3WCxTAsCsG3y4uV\nexport const GifGrid = ({category}) => {\n    const {loading,data} = useFetchGifs(category);\n  \n        return (\n        <div className=\"card-grid\">\n            <h3>{category}</h3>\n            {loading && <p>loading...</p>}\n            <ul>\n                {data.map(img =>{\n                    return (<GifGridItem \n                        {...img} \n                        key={img.id}/>\n                )})}\n            </ul>\n        </div>\n    )\n\n}","import { useEffect, useState } from \"react\";\nimport { getGif } from \"../helpers/GetGif\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGif(category)\n            .then(imgs => {\n\n            \n                setState({\n                    data: imgs,\n                    loading: false \n                });\n                \n        })\n    \n    },[category])\n     \n\n    return state;\n}","import React from 'react';\nimport { useState} from \"react\"\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n    const [categories,setCategory] = useState(['one punch']);\n    \n    return(\n    <>\n        <header>\n            <h1 className={\"animate__animated animate__bounce\"}>GifExpertApp</h1>\n            <AddCategory setCategory={setCategory} categories={categories}/>\n        </header>\n        <hr></hr>\n        <ul>       \n            {\n                categories.map((category) => {\n                    return ( <GifGrid \n                        category={category} \n                        key={category}/>\n                )})\n            }\n        </ul>\n \n    </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}